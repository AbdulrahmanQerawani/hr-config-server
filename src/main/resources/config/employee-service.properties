example.property=DEFAULT
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName= org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
#
# Logging settings
#logging.pattern.console="%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
logging.pattern.level="%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
#
#actuator settings
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env,beans
management.endpoints.enabled-by-default=true
#
#Discovery server
eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://eurekaserver:8070/eureka/

#Micrometer tracing ratio
management.tracing.sampling.probability=1.0

#export report traces to zipkin collector
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans

#keycloak oauth2 client & resources server settings
spring.security.oauth2.client.registration.keycloak.client-id=infinity
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
#
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak:8080/auth/realms/infinity-realm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
#
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/auth/realms/infinity-realm

#my gateway sever url
infinity.gateway.baseUrl=http://gateway:8072

#spring cloud stream configuration to binding with kafka topic
spring.cloud.function.definition=departmentConsumer
spring.cloud.stream.bindings.departmentConsumer-in-0.destination=deptChangeTopic
spring.cloud.stream.bindings.departmentConsumer-in-0.content-type=application/json
spring.cloud.stream.bindings.departmentConsumer-in-0.group=employeeService
spring.cloud.stream.bindings.departmentConsumer-in-0.consumer.use-native-decoding=true
spring.cloud.stream.kafka.bindings.departmentConsumer-in-0.consumer.configuration.value.deserializer=com.infinity.employee.events.DepartmentChangeDeserializer
binder.brokers=kafka:9092
spring.cloud.stream.kafka.binder.zkNodes==zookeeper:2181

# Redis Server 
redis.server = redis
redis.port = 6379